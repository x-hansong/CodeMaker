########################################################################################
##
## Common variables:
##  $YEAR - yyyy
##  $TIME - yyyy-MM-dd HH:mm:ss
##  $USER - user.name
##
## Available variables:
##  $class0 - the context class, alias: $class
##  $class1 - the selected class, like $class1, $class2
##  $ClassName - generate by the config of "Class Name", the generated class name
##
## Class Entry Structure:
##  $class0.className - the class Name
##  $class0.packageName - the packageName
##  $class0.importList - the list of imported classes name
##  $class0.fields - the list of the class fields
##          - type: the field type
##          - name: the field name
##          - modifier: the field modifier, like "private",or "@Setter private" if include annotations
##  $class0.allFields - the list of the class fields include all fields of superclass
##          - type: the field type
##          - name: the field name
##          - modifier: the field modifier, like "private",or "@Setter private" if include annotations
##  $class0.methods - the list of class methods
##          - name: the method name
##          - modifier: the method modifier, like "private static"
##          - returnType: the method returnType
##          - params: the method params, like "(String name)"
##  $class0.allMethods - the list of class methods include all methods of superclass
##          - name: the method name
##          - modifier: the method modifier, like "private static"
##          - returnType: the method returnType
##          - params: the method params, like "(String name)"#
########################################################################################
#macro (cap $strIn)$strIn.valueOf($strIn.charAt(0)).toUpperCase()$strIn.substring(1)#end
#macro (low $strIn)$strIn.valueOf($strIn.charAt(0)).toLowerCase()$strIn.substring(1)#end
#set($class0Var = "#low(${class0.ClassName})")
#set($class1Var = "#low(${class1.ClassName})")
package $class0.PackageName;

#foreach($importer in $class0.ImportList)
import $importer;
#end

/**
 *
 * @author $USER
 * @version $Id: ${ClassName}.java, v 0.1 $TIME $USER Exp $$
 */
class $ClassName {

    /**
     * Convert ${class1.ClassName} to ${class0.ClassName}
     * @param ${class1Var}
     * @return
     */
    public static $class0.ClassName convertTo${class0.ClassName}($class1.ClassName #low($class1.ClassName)) {
        if (${class1Var} == null) {
            return null;
        }
        $class0.ClassName ${class0Var} = new ${class0.ClassName}();

#foreach($field in $class0.Fields)
        ${class0Var}.set#cap($field.Name)(${class1Var}.get#cap($field.Name)());
#end

        return ${class0Var};
    }

    /**
     * Convert ${class0.ClassName} to ${class1.ClassName}
     * @param ${class0Var}
     * @return
     */
    public static $class1.ClassName convertTo${class1.ClassName}($class0.ClassName #low($class0.ClassName)) {
        if (${class0Var} == null) {
            return null;
        }
        $class1.ClassName ${class1Var} = new ${class1.ClassName}();

#foreach($field in $class1.Fields)
        ${class1Var}.set#cap($field.Name)(${class0Var}.get#cap($field.Name)());
#end

        return ${class1Var};
    }
}
